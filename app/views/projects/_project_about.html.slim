.row-fluid
	.span8
		= raw(@project.about)
	.span4
    - @rewards.each do |reward|
      .campaign-reward.masonry-box
        div[id="reward_#{reward.id}" data-update_url="#{sort_project_reward_path(@project, reward)}" class="box #{(can?(:update, reward) ? 'clickable_owner sortable' : '')} #{(@project.online? && !reward.sold_out? && !can?(:update, reward)  ? 'clickable'  : '' )}"]
          .campaign-reward-bar
            .double_border_right
              .campaign-reward-bar-price
                = reward.display_minimum
            .double_border_left
              a.campaign-reward-bar-buynow
                p
                  = "buy"
                  br
                  = "now"
          .campaign-reward-text2
            .campaign-reward-text
              - if can?(:update, @project)
                .hide id="reward#{reward.id}Editor"
                  .bootstrap-form
                    = semantic_form_for [@project, reward] do |f|
                      - if can? :update, reward, :minimum_value
                        = f.input :minimum_value
                      - if can? :update, reward, :description
                        = f.input :description
                      - if can? :update, reward, :maximum_backers
                        = f.input :maximum_backers
                      - if can? :update, reward, :image
                        = f.input :image
                      - if can? :update, reward, :title
                        = f.input :title

                      .bootstrap-twitter
                        = f.submit class: 'btn'

                      .clearfix.bootstrap-twitter
                        = link_to [@project, reward], class: 'btn btn-danger', method: :delete, confirm: 'Are you sure?' do
                          i.icon-trash.icon-white
                - if can?(:update, reward)
                  .bootstrap-twitter
                    = link_to "#reward#{reward.id}Editor", class: 'edit_reward btn btn-mini pull-right btn-primary' do
                      i.icon-pencil.icon-white


              = hidden_field_tag 'url', "#{new_project_backer_path(@project)}/?reward_id=#{reward.id}"
              - if reward.sold_out?
                span.icon.sold_out
              - else
                span.icon.avaliable
              / h2= t('projects.rewards.reward_title', minimum: reward.display_minimum).html_safe
              p.reward-title
                / TODO: title of reward
                = reward.title if reward.title
              .reward-description
                / TODO: reward description
                = reward.display_description.html_safe

              .reward-backers-info.font-tg-20
                .ff-green
                  = pluralize(reward.backers.confirmed.count, t('backer_singular'), t('backer_plural'))
                - if reward.maximum_backers
                  .maximum_backers.clearfix
                    - if reward.sold_out?
                      .sold_out= t('reward.sold_out')
                    - else
                      .limited= t('reward.limited')
                      .remaining
                        = reward.display_remaining
                  - in_time_to_confirm = reward.backers.in_time_to_confirm.count
                  - if in_time_to_confirm > 0
                    .maximum_backers.in_time_to_confirm.clearfix
                      .pending= t('projects.rewards.backs_to_confirm', count: in_time_to_confirm)
                  .clearfix
                - if current_user && current_user.admin
                  div class="reward_updated_at"
                    p= "Modificado em: #{I18n.l(reward.updated_at.to_date)} #{@project.online_date.nil? ? '' : ((@project.online_date > reward.updated_at)? '(draft)' : '(online)')}"
                  - if reward.has_modification?
                    div class="description_version rewardVersioning#{reward.id}"
                      p= reward.last_description
                    .maximum_backers.in_time_to_confirm.clearfix
                      .updated_reward
                        span id="rewardVersioning#{reward.id}"
                          = 'See previous version.'
.clearfix
	javascript:
		$(function () {
		  $('.reward-description').readmore();
		});









/= @project.about_html.html_safe

/p
/  = "About This Project"
/.project_image
/  = image_tag @project.display_image('project_thumb_small')
/ 
/.text
/  .flag
/    h5= t('projects.show.about_title')
/  .clearfix
/  p
/    = @project.about_html.html_safe
/ 
/.section_header
/  h1= @project.name
/  h4= t('projects.project_header.without_city', category_name: link_to(@project.category, explore_path(anchor: @project.category.to_s.parameterize)), author: link_to(@project.user.display_name, user_path(@project.user))).html_safe
/ 
/#creator_profile
/  h3= t('project_by')
/  .avatar = @project.user.display_image_html width: 80, height: 80
/  .personal_info
/    p.name
/     = link_to @project.user.display_name, user_path(@project.user)
/    #bio
/      p= @project.user.bio
/  #city
/    p.backer= t('count_backed_projects', total: @project.user.total_backs)
/    p.city
/      | #{@project.user.address_city}
/.user_social
/  ul
/    - if @project.user.facebook_link
/      li
/        = link_to "Perfil no facebook", @project.user.facebook_link, target: '_blank', class: 'facebook'
/    - if @project.user.twitter
/      li
/        = link_to "Perfil no twitter", @project.user.twitter_link, target: '_blank', class: 'twitter'
/    - if @project.user.email
/      li
/        = mail_to @project.user.email, @project.user.email, target: '_blank', class: 'email'
/    - if @project.user.other_link
/      li.other
/        = link_to @project.user.other_link, @project.user.other_link, target: '_blank'





/ .midia
/   .video
/     iframe src="#{@project.display_video_embed_url}" width="640" height="360" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen
/   .social
/     #project_share
/       #facebook_share= render_facebook_like href: project_by_slug_url(@project.permalink, locale: I18n.locale)
/       ul
/         li.embed
/           = link_to '#embed', id: 'embed_link' do
/             = image_tag "catarse/embed_icon19x9.png", title: t('projects.show.share.embed_title')
/             = t('projects.show.share.embed')
/       #twitter_share= render_twitter(url: project_by_slug_url(permalink: @project.permalink))
/       .clear
/ .text
/   .flag
/   h5= t('projects.show.about_title')
/   .clearfix
/   p
/     = @project.about_html.html_safe
